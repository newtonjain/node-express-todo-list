'use strict';
var util = require('util');
var TelemetryEvents_1 = require('../telemetry/TelemetryEvents');
var ErrorCodes_1 = require('./ErrorCodes');
var TelemetryErrorReportingService = (function () {
    function TelemetryErrorReportingService(telemetryService) {
        this.telemetryService = telemetryService;
    }
    TelemetryErrorReportingService.prototype.reportError = function (error) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        if (this.telemetryService.isEnabled) {
            var measurements = {};
            var properties = {
                // fill in a 'stack' property on the properties object
                stack: new Error().stack,
                severity: '' + error.severity,
                errorClass: '' + error.errorClass,
                errorCode: '' + error.errorCode,
                errorSlug: ErrorCodes_1.getSlugForErrorCode(error.errorCode),
                message: util.format.apply(util, [error.message].concat(params))
            };
            this.telemetryService.sendEvent(TelemetryEvents_1.TelemetryEvents.ERROR, properties, measurements);
        }
    };
    return TelemetryErrorReportingService;
}());
exports.TelemetryErrorReportingService = TelemetryErrorReportingService;

//# sourceMappingURL=../../../maps/src/errors/TelemetryErrorReportingService.js.map
